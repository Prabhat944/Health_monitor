<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Patients</title>
</head>

<body style="font-family: sans-serif;">
    <section>
        <div style="display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;">
            <h1>View Patients List</h1>
            <div style="display: flex;gap:20px;margin-bottom:20px;">
                <input type="text" id="search" placeholder="Search by name" style="width: 100%;
    min-width: 350px;
    height: 28px;
    border-radius: 4px;">
                <button onclick="searchPatients()" style="width: 100%;
  height: 35px;
  background-color: rgb(255, 0, 106);
  color: white;
  font-weight: 600;
  font-size: larger;
  border-radius: 4px;
  border-color:  rgb(255, 0, 106);
  cursor: pointer;">Search</button>
            </div>
            <table id="patientsTable" style="border-spacing: 4px;">
                <thead>
                    <tr style="color: rgb(255, 0, 106);
    letter-spacing: 0.5px;">
                        <th>Patient Id</th>
                        <th>Name</th>
                        <th>Heart Rate (BPM)</th>
                        <th>bloodPressure (mmHg)</th>
                        <th>Temperature (Â°C)</th>
                        <th>Actions</th>
                        <th>Moniter</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Patient data will be here -->
                </tbody>
            </table>
        </div>
    </section>
    <script>
        // Check if token exists in localStorage
        if (!localStorage.getItem('token')) {
            window.location.href = '/login';
        }

        async function fetchPatients(query = '') {
            const response = await fetch(`/api/health/patients?name=${query}`, {
                headers: {
                    'x-auth-token': localStorage.getItem('token')
                }
            });
            const patients = await response.json();
            return patients;
        }

        async function renderPatients(patients) {
            const tbody = document.getElementById('patientsTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            patients.forEach(patient => {
                const row = document.createElement('tr');
                row.innerHTML = `
          <td>${patient.patientId}</td>
          <td><h4 style="min-width: 100px;
    max-width: 200px;
    overflow-x: hidden;
    text-overflow: ellipsis;margin: 0;
    padding: 0;
    font-weight: 500;">${patient.name || "anonymous"}</h4></td>
          <td><input type="number" value="${patient.heartRate}" onchange="updatePatient('${patient._id}', 'heartRate', this.value)" style="border-radius: 4px;
    background-color: #00ffd22e;
    height: 25px;"></td>
          <td><input type="number" value="${patient.bloodPressure}" onchange="updatePatient('${patient._id}', 'bloodPressure', this.value)" style="border-radius: 4px;
    background-color: #e500ff2e;
    height: 25px;"></td>
          <td><input type="number" value="${patient.temperature}" onchange="updatePatient('${patient._id}', 'temperature', this.value)" style="border-radius: 4px;
    background-color: #caff002e;
    height: 25px;"></td>
          <td><button onclick="deletePatient('${patient._id}')" style="background-color: #ff0051;
    border: none;
    border-radius: 4px;
    height: 30px;
    width: 70px;
    color: white;
    font-weight: ;
    font-size: 14px;">Delete</button></td>
          <td><button onclick="moniterPatient(${patient.patientId.toString()})" style="    background-color: #00e6ff;
    border: none;
    border-radius: 4px;
    height: 30px;
    width: 108px;
    color: #0c0c0c;
    font-weight: ;
    font-size: 14px;">View Chart</button></td>
        `;
                tbody.appendChild(row);
            });
        }

        async function searchPatients() {
            const query = document.getElementById('search').value;
            const patients = await fetchPatients(query);
            renderPatients(patients);
        }

        async function moniterPatient(id) {
            window.location.href = `/moniterPatient/${id}`
        }

        async function updatePatient(id, field, value) {
            const response = await fetch(`/api/health/patients/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'x-auth-token': localStorage.getItem('token')
                },
                body: JSON.stringify({ [field]: value }),
            });
            const data = await response.json();
            if (response.ok) {
                alert('Patient data updated successfully!');
            } else {
                alert('Failed to update patient data: ' + data.msg);
            }
        }

        async function deletePatient(id) {
            const response = await fetch(`/api/health/patients/${id}`, {
                method: 'DELETE',
                headers: {
                    'x-auth-token': localStorage.getItem('token')
                },
            });
            const data = await response.json();
            if (response.ok) {
                alert('Patient deleted successfully!');
                searchPatients(); // Refresh the list
            } else {
                alert('Failed to delete patient: ' + data.msg);
            }
        }

        document.addEventListener('DOMContentLoaded', async () => {
            const patients = await fetchPatients();
            renderPatients(patients);
        });
    </script>
</body>

</html>